
public class StackImplementationUsingLinkedList{
    public static class Node{
        int val =0;
        Node next ;
        Node(int val){
            this.val=val;
        }
    }
    public static class Stack{
        Node head= null;
        int size=0;
        
        void push(int n){
            Node temp = new Node(n);
            temp.next=head;
            head=temp;
            size++;
        }
        
        int pop(){
            if(head==null){
                System.out.println("Stack is empty...");
                return -1;
            }
            else{
                int temp=head.val;
                head= head.next;
                size--;
                return temp;
                
            }
        }
        
        int peek() {
        if (head == null) {
            System.out.println("Stack is empty...");
            return -1;
        }
        return head.val;
        }
        
        boolean isEmpty(){
            if(head==null) return true;
            return false;
        }
        
        void display(){
           displayRec(head);
            System.out.println();
        }
        
        void displayRec(Node head){
            if(head==null) return;
            Node temp = head;
            displayRec(temp.next);
            System.out.print(temp.val + " ");
        }
        
        int size(){
            return size;
        }
        
    }
    public static void main(String[] args) {
        Stack st =new Stack();
        st.push(10);
        st.push(20);
        st.push(30);
        st.push(40);
        st.push(50);
        st.display();
        System.out.println(st.size());
        System.out.println(st.peek());
        st.pop();
        st.pop();
        st.display();
        System.out.println(st.size());
    }
}
